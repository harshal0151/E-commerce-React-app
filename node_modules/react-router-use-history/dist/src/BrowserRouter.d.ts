import React, { type MutableRefObject } from 'react';
import { type BrowserRouterProps } from 'react-router-dom';
import { type BrowserHistory, type History as RemixHistory } from '@remix-run/router';
import { type History as LegacyHistory } from 'history';
declare type BrowserRouterListener = Parameters<RemixHistory['listen']>[0];
/**
 * browser router state
 * @example history.listen((state: BrowserRouterHistoryState) => {})
 */
export declare type BrowserRouterHistoryState = Parameters<BrowserRouterListener>[0];
export declare const SubscriptionContext: React.Context<{
    ref: MutableRefObject<Set<BrowserRouterListener>>;
} | null>;
interface IBrowserRouterProps extends BrowserRouterProps {
    history?: BrowserHistory | LegacyHistory;
}
export declare function BrowserRouter({ basename, children, window, history: specifiedHistory, }: IBrowserRouterProps): JSX.Element;
export {};
